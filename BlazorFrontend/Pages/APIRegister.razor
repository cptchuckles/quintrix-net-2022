@page "/register"
@inject HttpClient Http
@inject NavigationManager NavManager

<div class="card m-auto mb-3" style="max-width: 600px;">
    <div class="card-header mb-2">
        <h3 class="card-title pt-1 pd-0">Register</h3>
    </div>
    <div class="card-body p-3">
        <div class="input-group row g-0 mb-3">
            <label class="input-group-text col col-auto" for="username" id="usernamelabel">Username</label>
            <input type="text" @bind="Username" id="username" aria-describedby="usernamelabel" class="form-control col" />
        </div>
        <div class="input-group row g-0 mb-3">
            <label class="input-group-text col col-auto align-right" for="password" id="passwordlabel">Password</label>
            <input type="password" @bind="Password" id="password" aria-describedby="passwordlabel" class="form-control" />
        </div>
        <div class="input-group row g-0 mb-3">
            <label class="input-group-text col col-auto align-right" for="password" id="confirmlabel">Confirm</label>
            <input type="password" @bind="PasswordConfirm" id="password-confirm" aria-describedby="confirmlabel" class="form-control" />
        </div>
        <div class="d-flex flex-row justify-content-between flex-wrap g-0">
            <button @onclick="TryRegister" class="btn btn-primary">Create account</button>
            <a href="/login">Login</a>
        </div>
    </div>
</div>

@if (errors.Length > 0)
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
    <strong>Holy guacamole!</strong> @errors
</div>
}

@code {
    public string Username { get; set; } = "";
    public string Password { get; set; } = "";
    private string _passwordConfirm = "";
    public string PasswordConfirm
    {
        get {
            if (Password != _passwordConfirm) {
                errors = _passwordMessage;
            }
            else if(errors == _passwordMessage) {
                errors = "";
            }
            return _passwordConfirm;
        }
        set => _passwordConfirm = value;
    }
    private string errors = "";
    private const string _passwordMessage = "Confirmation does not match password.";

    public async Task TryRegister()
    {
        var request = await Http.PostAsJsonAsync("https://localhost:7195/api/register",
            new Dictionary<string,string>{ ["Username"] = Username,
                                           ["Password"] = Password });
        if (request.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/login");
        }
        else
        {
            errors = $"Unable to register because {await request.Content.ReadAsStringAsync()}";
        }
    }
}
